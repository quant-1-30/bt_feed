# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!

import grpc

class btSimulatorStub(object):
  """ Interface exported by the server. """  
  
  def __init__(self, channel):
    """ Constructor. 
    
    Args: 
    channel: A grpc.Channel. 
    """
    
    self.get_calendar = channel.unary_unary(
      "/Flat.btSimulator/get_calendar"
      )
    
    self.replay_assets = channel.unary_unary(
      "/Flat.btSimulator/replay_assets"
      )
    
    self.replay_datasets = channel.unary_unary(
      "/Flat.btSimulator/replay_datasets"
      )
    
    self.replay_adjs = channel.unary_unary(
      "/Flat.btSimulator/replay_adjs"
      )
    
    self.replay_rights = channel.unary_unary(
      "/Flat.btSimulator/replay_rights"
      )
    

class btSimulatorServicer(object):
  """ Interface exported by the server. """  
  
  def get_calendar(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  
  def replay_assets(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  
  def replay_datasets(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  
  def replay_adjs(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  
  def replay_rights(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  

def add_btSimulatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
    'get_calendar': grpc.unary_unary_rpc_method_handler(
      servicer.get_calendar
    ),
    'replay_assets': grpc.unary_unary_rpc_method_handler(
      servicer.replay_assets
    ),
    'replay_datasets': grpc.unary_unary_rpc_method_handler(
      servicer.replay_datasets
    ),
    'replay_adjs': grpc.unary_unary_rpc_method_handler(
      servicer.replay_adjs
    ),
    'replay_rights': grpc.unary_unary_rpc_method_handler(
      servicer.replay_rights
    ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
    'Flat.btSimulator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))

