# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Flat

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DataRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DataRequest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDataRequest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # DataRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DataRequest
    def StartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DataRequest
    def EndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DataRequest
    def Freq(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def DataRequestStart(builder):
    builder.StartObject(3)

def Start(builder):
    DataRequestStart(builder)

def DataRequestAddStartDate(builder, startDate):
    builder.PrependInt32Slot(0, startDate, 0)

def AddStartDate(builder, startDate):
    DataRequestAddStartDate(builder, startDate)

def DataRequestAddEndDate(builder, endDate):
    builder.PrependInt32Slot(1, endDate, 0)

def AddEndDate(builder, endDate):
    DataRequestAddEndDate(builder, endDate)

def DataRequestAddFreq(builder, freq):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(freq), 0)

def AddFreq(builder, freq):
    DataRequestAddFreq(builder, freq)

def DataRequestEnd(builder):
    return builder.EndObject()

def End(builder):
    return DataRequestEnd(builder)
